/*! @name videojs-offset @version 2.1.2 @license MIT */
(function (QUnit, sinon, videojs) {
	'use strict';

	QUnit = QUnit && QUnit.hasOwnProperty('default') ? QUnit['default'] : QUnit;
	sinon = sinon && sinon.hasOwnProperty('default') ? sinon['default'] : sinon;
	videojs = videojs && videojs.hasOwnProperty('default') ? videojs['default'] : videojs;

	var commonjsGlobal = typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};

	var minDoc = {};

	var topLevel = typeof commonjsGlobal !== 'undefined' ? commonjsGlobal :
	    typeof window !== 'undefined' ? window : {};


	var doccy;

	if (typeof document !== 'undefined') {
	    doccy = document;
	} else {
	    doccy = topLevel['__GLOBAL_DOCUMENT_CACHE@4'];

	    if (!doccy) {
	        doccy = topLevel['__GLOBAL_DOCUMENT_CACHE@4'] = minDoc;
	    }
	}

	var document_1 = doccy;

	var version = "2.1.2";

	var cov_1yhysmpxd5 = function () {
	  var path = '/Users/cgcladera/Projects/videojs-offset/src/plugin.js',
	      hash = '7681580e15c7eedda94ce97d7d85f8f6b2d45650',
	      Function = function () {}.constructor,
	      global = new Function('return this')(),
	      gcv = '__coverage__',
	      coverageData = {
	    path: '/Users/cgcladera/Projects/videojs-offset/src/plugin.js',
	    statementMap: {
	      '0': {
	        start: {
	          line: 5,
	          column: 17
	        },
	        end: {
	          line: 5,
	          column: 19
	        }
	      },
	      '1': {
	        start: {
	          line: 8,
	          column: 23
	        },
	        end: {
	          line: 8,
	          column: 63
	        }
	      },
	      '2': {
	        start: {
	          line: 17,
	          column: 27
	        },
	        end: {
	          line: 41,
	          column: 1
	        }
	      },
	      '3': {
	        start: {
	          line: 18,
	          column: 15
	        },
	        end: {
	          line: 18,
	          column: 33
	        }
	      },
	      '4': {
	        start: {
	          line: 20,
	          column: 2
	        },
	        end: {
	          line: 23,
	          column: 3
	        }
	      },
	      '5': {
	        start: {
	          line: 21,
	          column: 4
	        },
	        end: {
	          line: 21,
	          column: 24
	        }
	      },
	      '6': {
	        start: {
	          line: 22,
	          column: 4
	        },
	        end: {
	          line: 22,
	          column: 16
	        }
	      },
	      '7': {
	        start: {
	          line: 24,
	          column: 2
	        },
	        end: {
	          line: 40,
	          column: 3
	        }
	      },
	      '8': {
	        start: {
	          line: 25,
	          column: 4
	        },
	        end: {
	          line: 25,
	          column: 47
	        }
	      },
	      '9': {
	        start: {
	          line: 26,
	          column: 4
	        },
	        end: {
	          line: 26,
	          column: 17
	        }
	      },
	      '10': {
	        start: {
	          line: 27,
	          column: 4
	        },
	        end: {
	          line: 27,
	          column: 26
	        }
	      },
	      '11': {
	        start: {
	          line: 30,
	          column: 4
	        },
	        end: {
	          line: 32,
	          column: 7
	        }
	      },
	      '12': {
	        start: {
	          line: 31,
	          column: 6
	        },
	        end: {
	          line: 31,
	          column: 48
	        }
	      },
	      '13': {
	        start: {
	          line: 34,
	          column: 4
	        },
	        end: {
	          line: 39,
	          column: 5
	        }
	      },
	      '14': {
	        start: {
	          line: 35,
	          column: 6
	        },
	        end: {
	          line: 35,
	          column: 60
	        }
	      },
	      '15': {
	        start: {
	          line: 37,
	          column: 6
	        },
	        end: {
	          line: 37,
	          column: 32
	        }
	      },
	      '16': {
	        start: {
	          line: 38,
	          column: 6
	        },
	        end: {
	          line: 38,
	          column: 26
	        }
	      },
	      '17': {
	        start: {
	          line: 55,
	          column: 22
	        },
	        end: {
	          line: 59,
	          column: 1
	        }
	      },
	      '18': {
	        start: {
	          line: 56,
	          column: 2
	        },
	        end: {
	          line: 58,
	          column: 5
	        }
	      },
	      '19': {
	        start: {
	          line: 57,
	          column: 4
	        },
	        end: {
	          line: 57,
	          column: 48
	        }
	      },
	      '20': {
	        start: {
	          line: 73,
	          column: 15
	        },
	        end: {
	          line: 150,
	          column: 1
	        }
	      },
	      '21': {
	        start: {
	          line: 74,
	          column: 2
	        },
	        end: {
	          line: 74,
	          column: 26
	        }
	      },
	      '22': {
	        start: {
	          line: 75,
	          column: 17
	        },
	        end: {
	          line: 75,
	          column: 33
	        }
	      },
	      '23': {
	        start: {
	          line: 77,
	          column: 2
	        },
	        end: {
	          line: 77,
	          column: 55
	        }
	      },
	      '24': {
	        start: {
	          line: 78,
	          column: 2
	        },
	        end: {
	          line: 78,
	          column: 51
	        }
	      },
	      '25': {
	        start: {
	          line: 79,
	          column: 2
	        },
	        end: {
	          line: 79,
	          column: 62
	        }
	      },
	      '26': {
	        start: {
	          line: 81,
	          column: 2
	        },
	        end: {
	          line: 145,
	          column: 3
	        }
	      },
	      '27': {
	        start: {
	          line: 82,
	          column: 4
	        },
	        end: {
	          line: 89,
	          column: 6
	        }
	      },
	      '28': {
	        start: {
	          line: 91,
	          column: 4
	        },
	        end: {
	          line: 99,
	          column: 6
	        }
	      },
	      '29': {
	        start: {
	          line: 92,
	          column: 6
	        },
	        end: {
	          line: 97,
	          column: 7
	        }
	      },
	      '30': {
	        start: {
	          line: 93,
	          column: 8
	        },
	        end: {
	          line: 95,
	          column: 9
	        }
	      },
	      '31': {
	        start: {
	          line: 94,
	          column: 10
	        },
	        end: {
	          line: 94,
	          column: 53
	        }
	      },
	      '32': {
	        start: {
	          line: 96,
	          column: 8
	        },
	        end: {
	          line: 96,
	          column: 84
	        }
	      },
	      '33': {
	        start: {
	          line: 98,
	          column: 6
	        },
	        end: {
	          line: 98,
	          column: 62
	        }
	      },
	      '34': {
	        start: {
	          line: 101,
	          column: 4
	        },
	        end: {
	          line: 115,
	          column: 6
	        }
	      },
	      '35': {
	        start: {
	          line: 102,
	          column: 6
	        },
	        end: {
	          line: 108,
	          column: 7
	        }
	      },
	      '36': {
	        start: {
	          line: 103,
	          column: 8
	        },
	        end: {
	          line: 106,
	          column: 9
	        }
	      },
	      '37': {
	        start: {
	          line: 104,
	          column: 10
	        },
	        end: {
	          line: 105,
	          column: 53
	        }
	      },
	      '38': {
	        start: {
	          line: 107,
	          column: 8
	        },
	        end: {
	          line: 107,
	          column: 64
	        }
	      },
	      '39': {
	        start: {
	          line: 110,
	          column: 6
	        },
	        end: {
	          line: 113,
	          column: 7
	        }
	      },
	      '40': {
	        start: {
	          line: 111,
	          column: 8
	        },
	        end: {
	          line: 112,
	          column: 43
	        }
	      },
	      '41': {
	        start: {
	          line: 114,
	          column: 6
	        },
	        end: {
	          line: 114,
	          column: 54
	        }
	      },
	      '42': {
	        start: {
	          line: 117,
	          column: 4
	        },
	        end: {
	          line: 119,
	          column: 6
	        }
	      },
	      '43': {
	        start: {
	          line: 118,
	          column: 6
	        },
	        end: {
	          line: 118,
	          column: 50
	        }
	      },
	      '44': {
	        start: {
	          line: 121,
	          column: 4
	        },
	        end: {
	          line: 123,
	          column: 6
	        }
	      },
	      '45': {
	        start: {
	          line: 122,
	          column: 6
	        },
	        end: {
	          line: 122,
	          column: 31
	        }
	      },
	      '46': {
	        start: {
	          line: 125,
	          column: 4
	        },
	        end: {
	          line: 130,
	          column: 6
	        }
	      },
	      '47': {
	        start: {
	          line: 126,
	          column: 6
	        },
	        end: {
	          line: 128,
	          column: 7
	        }
	      },
	      '48': {
	        start: {
	          line: 127,
	          column: 8
	        },
	        end: {
	          line: 127,
	          column: 31
	        }
	      },
	      '49': {
	        start: {
	          line: 129,
	          column: 6
	        },
	        end: {
	          line: 129,
	          column: 29
	        }
	      },
	      '50': {
	        start: {
	          line: 132,
	          column: 4
	        },
	        end: {
	          line: 144,
	          column: 6
	        }
	      },
	      '51': {
	        start: {
	          line: 133,
	          column: 19
	        },
	        end: {
	          line: 133,
	          column: 55
	        }
	      },
	      '52': {
	        start: {
	          line: 134,
	          column: 21
	        },
	        end: {
	          line: 134,
	          column: 23
	        }
	      },
	      '53': {
	        start: {
	          line: 136,
	          column: 6
	        },
	        end: {
	          line: 141,
	          column: 7
	        }
	      },
	      '54': {
	        start: {
	          line: 137,
	          column: 8
	        },
	        end: {
	          line: 140,
	          column: 10
	        }
	      },
	      '55': {
	        start: {
	          line: 143,
	          column: 6
	        },
	        end: {
	          line: 143,
	          column: 46
	        }
	      },
	      '56': {
	        start: {
	          line: 147,
	          column: 2
	        },
	        end: {
	          line: 149,
	          column: 5
	        }
	      },
	      '57': {
	        start: {
	          line: 148,
	          column: 4
	        },
	        end: {
	          line: 148,
	          column: 65
	        }
	      },
	      '58': {
	        start: {
	          line: 153,
	          column: 0
	        },
	        end: {
	          line: 153,
	          column: 33
	        }
	      },
	      '59': {
	        start: {
	          line: 155,
	          column: 0
	        },
	        end: {
	          line: 155,
	          column: 25
	        }
	      }
	    },
	    fnMap: {
	      '0': {
	        name: '(anonymous_0)',
	        decl: {
	          start: {
	            line: 17,
	            column: 27
	          },
	          end: {
	            line: 17,
	            column: 28
	          }
	        },
	        loc: {
	          start: {
	            line: 17,
	            column: 38
	          },
	          end: {
	            line: 41,
	            column: 1
	          }
	        },
	        line: 17
	      },
	      '1': {
	        name: '(anonymous_1)',
	        decl: {
	          start: {
	            line: 30,
	            column: 21
	          },
	          end: {
	            line: 30,
	            column: 22
	          }
	        },
	        loc: {
	          start: {
	            line: 30,
	            column: 27
	          },
	          end: {
	            line: 32,
	            column: 5
	          }
	        },
	        line: 30
	      },
	      '2': {
	        name: '(anonymous_2)',
	        decl: {
	          start: {
	            line: 55,
	            column: 22
	          },
	          end: {
	            line: 55,
	            column: 23
	          }
	        },
	        loc: {
	          start: {
	            line: 55,
	            column: 43
	          },
	          end: {
	            line: 59,
	            column: 1
	          }
	        },
	        line: 55
	      },
	      '3': {
	        name: '(anonymous_3)',
	        decl: {
	          start: {
	            line: 56,
	            column: 21
	          },
	          end: {
	            line: 56,
	            column: 22
	          }
	        },
	        loc: {
	          start: {
	            line: 56,
	            column: 27
	          },
	          end: {
	            line: 58,
	            column: 3
	          }
	        },
	        line: 56
	      },
	      '4': {
	        name: '(anonymous_4)',
	        decl: {
	          start: {
	            line: 73,
	            column: 15
	          },
	          end: {
	            line: 73,
	            column: 16
	          }
	        },
	        loc: {
	          start: {
	            line: 73,
	            column: 33
	          },
	          end: {
	            line: 150,
	            column: 1
	          }
	        },
	        line: 73
	      },
	      '5': {
	        name: '(anonymous_5)',
	        decl: {
	          start: {
	            line: 91,
	            column: 32
	          },
	          end: {
	            line: 91,
	            column: 33
	          }
	        },
	        loc: {
	          start: {
	            line: 91,
	            column: 43
	          },
	          end: {
	            line: 99,
	            column: 5
	          }
	        },
	        line: 91
	      },
	      '6': {
	        name: '(anonymous_6)',
	        decl: {
	          start: {
	            line: 101,
	            column: 35
	          },
	          end: {
	            line: 101,
	            column: 36
	          }
	        },
	        loc: {
	          start: {
	            line: 101,
	            column: 53
	          },
	          end: {
	            line: 115,
	            column: 5
	          }
	        },
	        line: 101
	      },
	      '7': {
	        name: '(anonymous_7)',
	        decl: {
	          start: {
	            line: 117,
	            column: 37
	          },
	          end: {
	            line: 117,
	            column: 38
	          }
	        },
	        loc: {
	          start: {
	            line: 117,
	            column: 48
	          },
	          end: {
	            line: 119,
	            column: 5
	          }
	        },
	        line: 117
	      },
	      '8': {
	        name: '(anonymous_8)',
	        decl: {
	          start: {
	            line: 121,
	            column: 35
	          },
	          end: {
	            line: 121,
	            column: 36
	          }
	        },
	        loc: {
	          start: {
	            line: 121,
	            column: 46
	          },
	          end: {
	            line: 123,
	            column: 5
	          }
	        },
	        line: 121
	      },
	      '9': {
	        name: '(anonymous_9)',
	        decl: {
	          start: {
	            line: 125,
	            column: 33
	          },
	          end: {
	            line: 125,
	            column: 34
	          }
	        },
	        loc: {
	          start: {
	            line: 125,
	            column: 44
	          },
	          end: {
	            line: 130,
	            column: 5
	          }
	        },
	        line: 125
	      },
	      '10': {
	        name: '(anonymous_10)',
	        decl: {
	          start: {
	            line: 132,
	            column: 32
	          },
	          end: {
	            line: 132,
	            column: 33
	          }
	        },
	        loc: {
	          start: {
	            line: 132,
	            column: 43
	          },
	          end: {
	            line: 144,
	            column: 5
	          }
	        },
	        line: 132
	      },
	      '11': {
	        name: '(anonymous_11)',
	        decl: {
	          start: {
	            line: 147,
	            column: 13
	          },
	          end: {
	            line: 147,
	            column: 14
	          }
	        },
	        loc: {
	          start: {
	            line: 147,
	            column: 19
	          },
	          end: {
	            line: 149,
	            column: 3
	          }
	        },
	        line: 147
	      }
	    },
	    branchMap: {
	      '0': {
	        loc: {
	          start: {
	            line: 8,
	            column: 23
	          },
	          end: {
	            line: 8,
	            column: 63
	          }
	        },
	        type: 'binary-expr',
	        locations: [{
	          start: {
	            line: 8,
	            column: 23
	          },
	          end: {
	            line: 8,
	            column: 45
	          }
	        }, {
	          start: {
	            line: 8,
	            column: 49
	          },
	          end: {
	            line: 8,
	            column: 63
	          }
	        }],
	        line: 8
	      },
	      '1': {
	        loc: {
	          start: {
	            line: 20,
	            column: 2
	          },
	          end: {
	            line: 23,
	            column: 3
	          }
	        },
	        type: 'if',
	        locations: [{
	          start: {
	            line: 20,
	            column: 2
	          },
	          end: {
	            line: 23,
	            column: 3
	          }
	        }, {
	          start: {
	            line: 20,
	            column: 2
	          },
	          end: {
	            line: 23,
	            column: 3
	          }
	        }],
	        line: 20
	      },
	      '2': {
	        loc: {
	          start: {
	            line: 24,
	            column: 2
	          },
	          end: {
	            line: 40,
	            column: 3
	          }
	        },
	        type: 'if',
	        locations: [{
	          start: {
	            line: 24,
	            column: 2
	          },
	          end: {
	            line: 40,
	            column: 3
	          }
	        }, {
	          start: {
	            line: 24,
	            column: 2
	          },
	          end: {
	            line: 40,
	            column: 3
	          }
	        }],
	        line: 24
	      },
	      '3': {
	        loc: {
	          start: {
	            line: 24,
	            column: 6
	          },
	          end: {
	            line: 24,
	            column: 73
	          }
	        },
	        type: 'binary-expr',
	        locations: [{
	          start: {
	            line: 24,
	            column: 6
	          },
	          end: {
	            line: 24,
	            column: 25
	          }
	        }, {
	          start: {
	            line: 24,
	            column: 29
	          },
	          end: {
	            line: 24,
	            column: 73
	          }
	        }],
	        line: 24
	      },
	      '4': {
	        loc: {
	          start: {
	            line: 34,
	            column: 4
	          },
	          end: {
	            line: 39,
	            column: 5
	          }
	        },
	        type: 'if',
	        locations: [{
	          start: {
	            line: 34,
	            column: 4
	          },
	          end: {
	            line: 39,
	            column: 5
	          }
	        }, {
	          start: {
	            line: 34,
	            column: 4
	          },
	          end: {
	            line: 39,
	            column: 5
	          }
	        }],
	        line: 34
	      },
	      '5': {
	        loc: {
	          start: {
	            line: 74,
	            column: 12
	          },
	          end: {
	            line: 74,
	            column: 25
	          }
	        },
	        type: 'binary-expr',
	        locations: [{
	          start: {
	            line: 74,
	            column: 12
	          },
	          end: {
	            line: 74,
	            column: 19
	          }
	        }, {
	          start: {
	            line: 74,
	            column: 23
	          },
	          end: {
	            line: 74,
	            column: 25
	          }
	        }],
	        line: 74
	      },
	      '6': {
	        loc: {
	          start: {
	            line: 77,
	            column: 33
	          },
	          end: {
	            line: 77,
	            column: 53
	          }
	        },
	        type: 'binary-expr',
	        locations: [{
	          start: {
	            line: 77,
	            column: 33
	          },
	          end: {
	            line: 77,
	            column: 46
	          }
	        }, {
	          start: {
	            line: 77,
	            column: 50
	          },
	          end: {
	            line: 77,
	            column: 53
	          }
	        }],
	        line: 77
	      },
	      '7': {
	        loc: {
	          start: {
	            line: 78,
	            column: 31
	          },
	          end: {
	            line: 78,
	            column: 49
	          }
	        },
	        type: 'binary-expr',
	        locations: [{
	          start: {
	            line: 78,
	            column: 31
	          },
	          end: {
	            line: 78,
	            column: 42
	          }
	        }, {
	          start: {
	            line: 78,
	            column: 46
	          },
	          end: {
	            line: 78,
	            column: 49
	          }
	        }],
	        line: 78
	      },
	      '8': {
	        loc: {
	          start: {
	            line: 79,
	            column: 27
	          },
	          end: {
	            line: 79,
	            column: 61
	          }
	        },
	        type: 'binary-expr',
	        locations: [{
	          start: {
	            line: 79,
	            column: 27
	          },
	          end: {
	            line: 79,
	            column: 52
	          }
	        }, {
	          start: {
	            line: 79,
	            column: 56
	          },
	          end: {
	            line: 79,
	            column: 61
	          }
	        }],
	        line: 79
	      },
	      '9': {
	        loc: {
	          start: {
	            line: 81,
	            column: 2
	          },
	          end: {
	            line: 145,
	            column: 3
	          }
	        },
	        type: 'if',
	        locations: [{
	          start: {
	            line: 81,
	            column: 2
	          },
	          end: {
	            line: 145,
	            column: 3
	          }
	        }, {
	          start: {
	            line: 81,
	            column: 2
	          },
	          end: {
	            line: 145,
	            column: 3
	          }
	        }],
	        line: 81
	      },
	      '10': {
	        loc: {
	          start: {
	            line: 81,
	            column: 6
	          },
	          end: {
	            line: 81,
	            column: 57
	          }
	        },
	        type: 'binary-expr',
	        locations: [{
	          start: {
	            line: 81,
	            column: 6
	          },
	          end: {
	            line: 81,
	            column: 23
	          }
	        }, {
	          start: {
	            line: 81,
	            column: 27
	          },
	          end: {
	            line: 81,
	            column: 57
	          }
	        }],
	        line: 81
	      },
	      '11': {
	        loc: {
	          start: {
	            line: 92,
	            column: 6
	          },
	          end: {
	            line: 97,
	            column: 7
	          }
	        },
	        type: 'if',
	        locations: [{
	          start: {
	            line: 92,
	            column: 6
	          },
	          end: {
	            line: 97,
	            column: 7
	          }
	        }, {
	          start: {
	            line: 92,
	            column: 6
	          },
	          end: {
	            line: 97,
	            column: 7
	          }
	        }],
	        line: 92
	      },
	      '12': {
	        loc: {
	          start: {
	            line: 92,
	            column: 10
	          },
	          end: {
	            line: 92,
	            column: 74
	          }
	        },
	        type: 'binary-expr',
	        locations: [{
	          start: {
	            line: 92,
	            column: 10
	          },
	          end: {
	            line: 92,
	            column: 39
	          }
	        }, {
	          start: {
	            line: 92,
	            column: 43
	          },
	          end: {
	            line: 92,
	            column: 74
	          }
	        }],
	        line: 92
	      },
	      '13': {
	        loc: {
	          start: {
	            line: 93,
	            column: 8
	          },
	          end: {
	            line: 95,
	            column: 9
	          }
	        },
	        type: 'if',
	        locations: [{
	          start: {
	            line: 93,
	            column: 8
	          },
	          end: {
	            line: 95,
	            column: 9
	          }
	        }, {
	          start: {
	            line: 93,
	            column: 8
	          },
	          end: {
	            line: 95,
	            column: 9
	          }
	        }],
	        line: 93
	      },
	      '14': {
	        loc: {
	          start: {
	            line: 102,
	            column: 6
	          },
	          end: {
	            line: 108,
	            column: 7
	          }
	        },
	        type: 'if',
	        locations: [{
	          start: {
	            line: 102,
	            column: 6
	          },
	          end: {
	            line: 108,
	            column: 7
	          }
	        }, {
	          start: {
	            line: 102,
	            column: 6
	          },
	          end: {
	            line: 108,
	            column: 7
	          }
	        }],
	        line: 102
	      },
	      '15': {
	        loc: {
	          start: {
	            line: 103,
	            column: 8
	          },
	          end: {
	            line: 106,
	            column: 9
	          }
	        },
	        type: 'if',
	        locations: [{
	          start: {
	            line: 103,
	            column: 8
	          },
	          end: {
	            line: 106,
	            column: 9
	          }
	        }, {
	          start: {
	            line: 103,
	            column: 8
	          },
	          end: {
	            line: 106,
	            column: 9
	          }
	        }],
	        line: 103
	      },
	      '16': {
	        loc: {
	          start: {
	            line: 110,
	            column: 6
	          },
	          end: {
	            line: 113,
	            column: 7
	          }
	        },
	        type: 'if',
	        locations: [{
	          start: {
	            line: 110,
	            column: 6
	          },
	          end: {
	            line: 113,
	            column: 7
	          }
	        }, {
	          start: {
	            line: 110,
	            column: 6
	          },
	          end: {
	            line: 113,
	            column: 7
	          }
	        }],
	        line: 110
	      },
	      '17': {
	        loc: {
	          start: {
	            line: 126,
	            column: 6
	          },
	          end: {
	            line: 128,
	            column: 7
	          }
	        },
	        type: 'if',
	        locations: [{
	          start: {
	            line: 126,
	            column: 6
	          },
	          end: {
	            line: 128,
	            column: 7
	          }
	        }, {
	          start: {
	            line: 126,
	            column: 6
	          },
	          end: {
	            line: 128,
	            column: 7
	          }
	        }],
	        line: 126
	      }
	    },
	    s: {
	      '0': 0,
	      '1': 0,
	      '2': 0,
	      '3': 0,
	      '4': 0,
	      '5': 0,
	      '6': 0,
	      '7': 0,
	      '8': 0,
	      '9': 0,
	      '10': 0,
	      '11': 0,
	      '12': 0,
	      '13': 0,
	      '14': 0,
	      '15': 0,
	      '16': 0,
	      '17': 0,
	      '18': 0,
	      '19': 0,
	      '20': 0,
	      '21': 0,
	      '22': 0,
	      '23': 0,
	      '24': 0,
	      '25': 0,
	      '26': 0,
	      '27': 0,
	      '28': 0,
	      '29': 0,
	      '30': 0,
	      '31': 0,
	      '32': 0,
	      '33': 0,
	      '34': 0,
	      '35': 0,
	      '36': 0,
	      '37': 0,
	      '38': 0,
	      '39': 0,
	      '40': 0,
	      '41': 0,
	      '42': 0,
	      '43': 0,
	      '44': 0,
	      '45': 0,
	      '46': 0,
	      '47': 0,
	      '48': 0,
	      '49': 0,
	      '50': 0,
	      '51': 0,
	      '52': 0,
	      '53': 0,
	      '54': 0,
	      '55': 0,
	      '56': 0,
	      '57': 0,
	      '58': 0,
	      '59': 0
	    },
	    f: {
	      '0': 0,
	      '1': 0,
	      '2': 0,
	      '3': 0,
	      '4': 0,
	      '5': 0,
	      '6': 0,
	      '7': 0,
	      '8': 0,
	      '9': 0,
	      '10': 0,
	      '11': 0
	    },
	    b: {
	      '0': [0, 0],
	      '1': [0, 0],
	      '2': [0, 0],
	      '3': [0, 0],
	      '4': [0, 0],
	      '5': [0, 0],
	      '6': [0, 0],
	      '7': [0, 0],
	      '8': [0, 0],
	      '9': [0, 0],
	      '10': [0, 0],
	      '11': [0, 0],
	      '12': [0, 0],
	      '13': [0, 0],
	      '14': [0, 0],
	      '15': [0, 0],
	      '16': [0, 0],
	      '17': [0, 0]
	    },
	    _coverageSchema: '332fd63041d2c1bcb487cc26dd0d5f7d97098a6c'
	  },
	      coverage = global[gcv] || (global[gcv] = {});

	  if (coverage[path] && coverage[path].hash === hash) {
	    return coverage[path];
	  }

	  coverageData.hash = hash;
	  return coverage[path] = coverageData;
	}();
	var defaults = (cov_1yhysmpxd5.s[0]++, {});
	var registerPlugin = (cov_1yhysmpxd5.s[1]++, (cov_1yhysmpxd5.b[0][0]++, videojs.registerPlugin) || (cov_1yhysmpxd5.b[0][1]++, videojs.plugin));
	cov_1yhysmpxd5.s[2]++;

	var onPlayerTimeUpdate = function onPlayerTimeUpdate() {
	  var _this = this;

	  cov_1yhysmpxd5.f[0]++;
	  var curr = (cov_1yhysmpxd5.s[3]++, this.currentTime());
	  cov_1yhysmpxd5.s[4]++;

	  if (curr < 0) {
	    cov_1yhysmpxd5.b[1][0]++;
	    cov_1yhysmpxd5.s[5]++;
	    this.currentTime(0);
	    cov_1yhysmpxd5.s[6]++;
	    this.play();
	  } else {
	    cov_1yhysmpxd5.b[1][1]++;
	  }

	  cov_1yhysmpxd5.s[7]++;

	  if ((cov_1yhysmpxd5.b[3][0]++, this._offsetEnd > 0) && (cov_1yhysmpxd5.b[3][1]++, curr > this._offsetEnd - this._offsetStart)) {
	    cov_1yhysmpxd5.b[2][0]++;
	    cov_1yhysmpxd5.s[8]++;
	    this.off('timeupdate', onPlayerTimeUpdate);
	    cov_1yhysmpxd5.s[9]++;
	    this.pause();
	    cov_1yhysmpxd5.s[10]++;
	    this.trigger('ended');
	    cov_1yhysmpxd5.s[11]++;
	    this.one('play', function () {
	      cov_1yhysmpxd5.f[1]++;
	      cov_1yhysmpxd5.s[12]++;

	      _this.on('timeupdate', onPlayerTimeUpdate);
	    });
	    cov_1yhysmpxd5.s[13]++;

	    if (!this._restartBeginning) {
	      cov_1yhysmpxd5.b[4][0]++;
	      cov_1yhysmpxd5.s[14]++;
	      this.currentTime(this._offsetEnd - this._offsetStart);
	    } else {
	      cov_1yhysmpxd5.b[4][1]++;
	      cov_1yhysmpxd5.s[15]++;
	      this.trigger('loadstart');
	      cov_1yhysmpxd5.s[16]++;
	      this.currentTime(0);
	    }
	  } else {
	    cov_1yhysmpxd5.b[2][1]++;
	  }
	};

	cov_1yhysmpxd5.s[17]++;

	var onPlayerReady = function onPlayerReady(player, options) {
	  cov_1yhysmpxd5.f[2]++;
	  cov_1yhysmpxd5.s[18]++;
	  player.one('play', function () {
	    cov_1yhysmpxd5.f[3]++;
	    cov_1yhysmpxd5.s[19]++;
	    player.on('timeupdate', onPlayerTimeUpdate);
	  });
	};

	cov_1yhysmpxd5.s[20]++;

	var offset = function offset(options) {
	  var _this2 = this;

	  cov_1yhysmpxd5.f[4]++;
	  cov_1yhysmpxd5.s[21]++;
	  options = (cov_1yhysmpxd5.b[5][0]++, options) || (cov_1yhysmpxd5.b[5][1]++, {});
	  var Player = (cov_1yhysmpxd5.s[22]++, this.constructor);
	  cov_1yhysmpxd5.s[23]++;
	  this._offsetStart = parseFloat((cov_1yhysmpxd5.b[6][0]++, options.start) || (cov_1yhysmpxd5.b[6][1]++, '0'));
	  cov_1yhysmpxd5.s[24]++;
	  this._offsetEnd = parseFloat((cov_1yhysmpxd5.b[7][0]++, options.end) || (cov_1yhysmpxd5.b[7][1]++, '0'));
	  cov_1yhysmpxd5.s[25]++;
	  this._restartBeginning = (cov_1yhysmpxd5.b[8][0]++, options.restart_beginning) || (cov_1yhysmpxd5.b[8][1]++, false);
	  cov_1yhysmpxd5.s[26]++;

	  if ((cov_1yhysmpxd5.b[10][0]++, !Player.__super__) || (cov_1yhysmpxd5.b[10][1]++, !Player.__super__.__offsetInit)) {
	    cov_1yhysmpxd5.b[9][0]++;
	    cov_1yhysmpxd5.s[27]++;
	    Player.__super__ = {
	      __offsetInit: true,
	      duration: Player.prototype.duration,
	      currentTime: Player.prototype.currentTime,
	      bufferedPercent: Player.prototype.bufferedPercent,
	      remainingTime: Player.prototype.remainingTime,
	      buffered: Player.prototype.buffered
	    };
	    cov_1yhysmpxd5.s[28]++;

	    Player.prototype.duration = function () {
	      cov_1yhysmpxd5.f[5]++;
	      cov_1yhysmpxd5.s[29]++;

	      if ((cov_1yhysmpxd5.b[12][0]++, this._offsetEnd !== undefined) && (cov_1yhysmpxd5.b[12][1]++, this._offsetStart !== undefined)) {
	        cov_1yhysmpxd5.b[11][0]++;
	        cov_1yhysmpxd5.s[30]++;

	        if (this._offsetEnd > 0) {
	          cov_1yhysmpxd5.b[13][0]++;
	          cov_1yhysmpxd5.s[31]++;
	          return this._offsetEnd - this._offsetStart;
	        } else {
	          cov_1yhysmpxd5.b[13][1]++;
	        }

	        cov_1yhysmpxd5.s[32]++;
	        return Player.__super__.duration.apply(this, arguments) - this._offsetStart;
	      } else {
	        cov_1yhysmpxd5.b[11][1]++;
	      }

	      cov_1yhysmpxd5.s[33]++;
	      return Player.__super__.duration.apply(this, arguments);
	    };

	    cov_1yhysmpxd5.s[34]++;

	    Player.prototype.currentTime = function (seconds) {
	      cov_1yhysmpxd5.f[6]++;
	      cov_1yhysmpxd5.s[35]++;

	      if (seconds !== undefined) {
	        cov_1yhysmpxd5.b[14][0]++;
	        cov_1yhysmpxd5.s[36]++;

	        if (this._offsetStart !== undefined) {
	          cov_1yhysmpxd5.b[15][0]++;
	          cov_1yhysmpxd5.s[37]++;
	          return Player.__super__.currentTime.call(this, seconds + this._offsetStart);
	        } else {
	          cov_1yhysmpxd5.b[15][1]++;
	        }

	        cov_1yhysmpxd5.s[38]++;
	        return Player.__super__.currentTime.call(this, seconds);
	      } else {
	        cov_1yhysmpxd5.b[14][1]++;
	      }

	      cov_1yhysmpxd5.s[39]++;

	      if (this._offsetStart !== undefined) {
	        cov_1yhysmpxd5.b[16][0]++;
	        cov_1yhysmpxd5.s[40]++;
	        return Player.__super__.currentTime.apply(this) - this._offsetStart;
	      } else {
	        cov_1yhysmpxd5.b[16][1]++;
	      }

	      cov_1yhysmpxd5.s[41]++;
	      return Player.__super__.currentTime.apply(this);
	    };

	    cov_1yhysmpxd5.s[42]++;

	    Player.prototype.remainingTime = function () {
	      cov_1yhysmpxd5.f[7]++;
	      cov_1yhysmpxd5.s[43]++;
	      return this.duration() - this.currentTime();
	    };

	    cov_1yhysmpxd5.s[44]++;

	    Player.prototype.startOffset = function () {
	      cov_1yhysmpxd5.f[8]++;
	      cov_1yhysmpxd5.s[45]++;
	      return this._offsetStart;
	    };

	    cov_1yhysmpxd5.s[46]++;

	    Player.prototype.endOffset = function () {
	      cov_1yhysmpxd5.f[9]++;
	      cov_1yhysmpxd5.s[47]++;

	      if (this._offsetEnd > 0) {
	        cov_1yhysmpxd5.b[17][0]++;
	        cov_1yhysmpxd5.s[48]++;
	        return this._offsetEnd;
	      } else {
	        cov_1yhysmpxd5.b[17][1]++;
	      }

	      cov_1yhysmpxd5.s[49]++;
	      return this.duration();
	    };

	    cov_1yhysmpxd5.s[50]++;

	    Player.prototype.buffered = function () {
	      cov_1yhysmpxd5.f[10]++;
	      var buff = (cov_1yhysmpxd5.s[51]++, Player.__super__.buffered.call(this));
	      var ranges = (cov_1yhysmpxd5.s[52]++, []);
	      cov_1yhysmpxd5.s[53]++;

	      for (var i = 0; i < buff.length; i++) {
	        cov_1yhysmpxd5.s[54]++;
	        ranges[i] = [Math.max(0, buff.start(i) - this._offsetStart), Math.min(Math.max(0, buff.end(i) - this._offsetStart), this.duration())];
	      }

	      cov_1yhysmpxd5.s[55]++;
	      return videojs.createTimeRanges(ranges);
	    };
	  } else {
	    cov_1yhysmpxd5.b[9][1]++;
	  }

	  cov_1yhysmpxd5.s[56]++;
	  this.ready(function () {
	    cov_1yhysmpxd5.f[11]++;
	    cov_1yhysmpxd5.s[57]++;
	    onPlayerReady(_this2, videojs.mergeOptions(defaults, options));
	  });
	};

	cov_1yhysmpxd5.s[58]++;
	registerPlugin('offset', offset);
	cov_1yhysmpxd5.s[59]++;
	offset.VERSION = version;

	var Player = videojs.getComponent('Player');
	QUnit.test('the environment is sane', function (assert) {
	  assert.strictEqual(typeof Array.isArray, 'function', 'es5 exists');
	  assert.strictEqual(typeof sinon, 'object', 'sinon exists');
	  assert.strictEqual(typeof videojs, 'function', 'videojs exists');
	  assert.strictEqual(typeof offset, 'function', 'plugin is a function');
	});
	QUnit.module('videojs-offset', {
	  beforeEach: function beforeEach() {
	    // Mock the environment's timers because certain things - particularly
	    // player readiness - are asynchronous in video.js 5. This MUST come
	    // before any player is created; otherwise, timers could get created
	    // with the actual timer methods!
	    this.clock = sinon.useFakeTimers();
	    this.fixture = document_1.getElementById('qunit-fixture');
	    this.video = document_1.createElement('video');
	    this.fixture.appendChild(this.video);
	    this.player = videojs(this.video);
	    this.sandbox = sinon.createSandbox();
	  },
	  afterEach: function afterEach() {
	    this.player.dispose();
	    this.clock.restore();
	    this.sandbox.restore();
	  }
	});
	QUnit.test('registers itself with video.js', function (assert) {
	  assert.expect(2);
	  assert.strictEqual(typeof Player.prototype.offset, 'function', 'videojs-offset plugin was registered');
	  this.player.offset({
	    start: 10,
	    end: 300
	  }); // Tick the clock forward enough to trigger the player to be "ready".

	  this.clock.tick(1);
	  assert.ok(this.player.duration() === 290, 'the plugin alters video duration adjusting to start|end options');
	});
	QUnit.test('remaining time', function (assert) {
	  assert.expect(1);
	  this.player.offset({
	    start: 10,
	    end: 300
	  }); // Tick the clock forward enough to trigger the player to be "ready".

	  this.clock.tick(1);
	  this.player.currentTime(2);
	  assert.ok(this.player.remainingTime() === 288, 'the plugin alters remaining time');
	});
	QUnit.test('configure start and end as as strings', function (assert) {
	  assert.expect(1);
	  this.player.offset({
	    start: '10.5',
	    end: '300.5'
	  }); // Tick the clock forward enough to trigger the player to be "ready".

	  this.clock.tick(1);
	  this.player.currentTime(2);
	  assert.ok(this.player.currentTime() === 2, 'the plugin alters seeking by applying the start correction');
	});
	QUnit.test('should override buffered method', function (assert) {
	  assert.expect(2);
	  var initRange = videojs.createTimeRanges([[0, 30]]);
	  this.sandbox.stub(Player.__super__, 'buffered').returns(initRange);
	  this.player.offset({
	    start: 5,
	    end: 25
	  });
	  var buff = this.player.buffered();
	  assert.ok(buff.start(0) === 0, 'start should be 0. Actual: ' + buff.start(0));
	  assert.ok(buff.end(0) === 20, 'end equal to video duration. Actual: ' + buff.end(0));
	});
	QUnit.test('start offset and end offset getters', function (assert) {
	  assert.expect(3);
	  this.player.offset({
	    start: 10,
	    end: 300
	  });
	  assert.ok(this.player.startOffset() === 10, 'should return start offset');
	  assert.ok(this.player.endOffset() === 300, 'should return end offset'); // Reset the player instance

	  this.player = videojs(this.video);
	  this.sandbox.stub(this.player, 'duration').returns(500);
	  this.player.offset({
	    start: 10
	  });
	  assert.ok(this.player.endOffset() === 500, 'should return the video duration');
	});
	QUnit.test('rest time update handler when video reaches the end', function (assert) {
	  var triggerReady;
	  var triggerPlay;
	  var triggerTimeupdate;
	  var currentTime = 0;
	  var _thisPlayer = this.player;
	  this.sandbox.stub(this.player, 'ready').callsFake(function (cb) {
	    triggerReady = function triggerReady() {
	      cb.call(_thisPlayer);
	    };
	  });
	  this.sandbox.stub(this.player, 'one').withArgs('play', sinon.match.any).callsFake(function (event, cb) {
	    triggerPlay = function triggerPlay() {
	      cb.call(_thisPlayer);
	    };
	  });
	  var addEventListenerStub = this.sandbox.stub(this.player, 'on');
	  addEventListenerStub.withArgs('timeupdate', sinon.match.any).callsFake(function (event, cb) {
	    triggerTimeupdate = function triggerTimeupdate(curr) {
	      currentTime = curr;
	      cb.call(_thisPlayer);
	    };
	  });
	  addEventListenerStub.callThrough();
	  this.sandbox.stub(this.player, 'currentTime').callsFake(function (curr) {
	    if (!curr && curr !== 0) {
	      return currentTime;
	    }

	    currentTime = curr;
	  });
	  this.sandbox.spy(this.player, 'off');
	  this.sandbox.spy(this.player, 'pause');
	  this.sandbox.spy(this.player, 'trigger');
	  this.player.offset({
	    start: 5,
	    end: 300,
	    restart_beginning: true
	    /* eslint-disable-line */

	  });
	  triggerReady();
	  triggerPlay(); // Reset one so we can verify later that it was called again

	  this.player.one.resetHistory();
	  triggerTimeupdate(300);
	  assert.ok(this.player.pause.called === true, 'should pause the video');
	  assert.ok(this.player.off.calledWith('timeupdate', sinon.match.any), 'should unsubscribe from timeupdate events');
	  assert.ok(this.player.trigger.calledWith('ended'), 'should trigger ended event');
	  assert.equal(currentTime, 0, 'should get back to the beginning');
	  assert.ok(this.player.one.calledWith('play', sinon.match.func), 'should subscribe to next play event'); // Clean on's calls history

	  this.player.on.resetHistory();
	  triggerPlay();
	  assert.ok(this.player.on.calledWith('timeupdate', sinon.match.func), 'should subscribe to time update after the first play');
	});

}(QUnit, sinon, videojs));
